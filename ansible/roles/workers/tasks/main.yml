- name: Update apt and install docker-ce
  become: yes
  apt: name={{ item }} state=latest update_cache=yes
  loop: "{{cluster.workers }}"
  when: cluster.install == '1'


- name: Install Docker Module for Python
  pip:
    name: docker

- name: Add users to docker group.
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{cluster.users}}"

- name: Create config directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - /var/lib/kubelet
    - /var/lib/kubernetes
    - /var/lib/kube-proxy

- name: Copy binaries
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0554
  with_items:
    - '{{ BIN_DIR }}/kubectl'
    - '{{ BIN_DIR }}/kubelet'
    - '{{ BIN_DIR }}/kube-proxy'

- name: Copy certificates and config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: "{{ PKI_DIR }}/ca.crt"                             , dest: "/var/lib/kubernetes/" }
    - { src: "{{ PKI_DIR }}/{{ ansible_hostname }}.crt"         , dest: "/var/lib/kubelet/" }
    - { src: "{{ PKI_DIR }}/{{ ansible_hostname }}.key"     , dest: "/var/lib/kubelet/" }
    - { src: "{{ CONF_DIR }}/{{ ansible_hostname }}.kubeconfig" , dest: "/var/lib/kubelet/" }
    - { src: "{{ CONF_DIR }}/{{ ansible_hostname }}.kubeconfig" , dest: "/var/lib/kubelet/" }
    - { src: "{{ CONF_DIR }}/kube-proxy.kubeconfig"             , dest: "/var/lib/kube-proxy/kubeconfig"}

- name: Copy config file for kubelet
  template:
    src: "kubelet-config.j2"
    dest: "/var/lib/kubelet/kubelet-config.yaml"
    owner: root
    group: root
    mode: 0644
  tags:
    - config

- name: Copy config file for kubelet
  template:
    src: "lib/systemd/system/kubelet.service.j2"
    dest: "/lib/systemd/system/kubelet.service"
    owner: root
    group: root
  notify:
    - restart kubelet
  tags:
    - config
    
- name: Copy config file for kube-proxy
  template:
    src: "lib/systemd/system/kube-proxy.service.j2"
    dest: "/lib/systemd/system/kube-proxy.service"
    owner: root
    group: root
    mode: 0664
  notify:
    - restart kube-proxy
