
- name: Copy binaries
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0554
  loop:
    - '{{ BIN_DIR }}/kube-apiserver'
    - '{{ BIN_DIR }}/kube-controller-manager'
    - '{{ BIN_DIR }}/kube-scheduler'
    - '{{ BIN_DIR }}/kubectl'

- name: Create config directory
  file:
    path: /var/lib/kubernetes
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy certificates and keys
  copy:
    src: "{{ item }}"
    dest: /var/lib/kubernetes
    owner: root
    group: root
    mode: 0644
  loop:
    - '{{ PKI_DIR }}/ca.crt'
    - '{{ PKI_DIR }}/ca.key'
    - '{{ PKI_DIR }}/kube-apiserver.crt'
    - '{{ PKI_DIR }}/kube-apiserver.key'
    - '{{ PKI_DIR }}/service-account.key'
    - '{{ PKI_DIR }}/service-account.crt'
    - '{{ PKI_DIR }}/etcd-server.key'
    - '{{ PKI_DIR }}/etcd-server.crt'  
    - '{{ PKI_DIR }}/encryption-config.yml'

- name: Copy certificates and keys
  copy:
    src: "{{ item }}"
    dest: /var/lib/kubernetes
    owner: root
    group: root
    mode: 0644
  loop:
    - '{{ CONF_DIR }}/kube-scheduler.kubeconfig'
    - '{{ CONF_DIR }}/kube-controller-manager.kubeconfig'
    - '{{ CONF_DIR }}/admin.kubeconfig'

- name: Copy certificates and keys
  copy:
    src: "{{ item }}"
    dest: /var/lib/kubernetes
    owner: root
    group: root
    mode: 0644
  loop:
    - '{{ PKI_DIR }}/ca.crt'
    - '{{ PKI_DIR }}/ca.key'
    - '{{ PKI_DIR }}/kube-apiserver.crt'
    - '{{ PKI_DIR }}/kube-apiserver.key'
    - '{{ PKI_DIR }}/service-account.key'
    - '{{ PKI_DIR }}/service-account.crt'
    - '{{ PKI_DIR }}/etcd-server.key'
    - '{{ PKI_DIR }}/etcd-server.crt'  
    - '{{ PKI_DIR }}/encryption-config.yml'



- name: Copy systemd unit file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items: 
    - { src: "lib/systemd/system/kube-apiserver.service.j2"          , dest: "/lib/systemd/system/kube-apiserver.service" }
    - { src: "lib/systemd/system/kube-controller-manager.service.j2" , dest: "/lib/systemd/system/kube-controller-manager.service" }
    - { src: "lib/systemd/system/kube-scheduler.service.j2"          , dest: "/lib/systemd/system/kube-scheduler.service" }
  notify:
    - restart masters
  tags:
    - config

- meta: flush_handlers
- name: Copy rbac aconf
  copy:
    src: "{{ item }}"
    dest: /var/lib/kubernetes
    owner: root
    group: root
    mode: 0644
  loop:
    - 'roles/masters/templates/rbac-conf/rbac.yml'

- name: Configure RBAC for kubelet authorization
  shell:  kubectl --kubeconfig /var/lib/kubernetes/admin.kubeconfig apply -f /var/lib/kubernetes/rbac.yml
  become: yes
  register: rbac_conf
  retries: 3
  delay: 10
 
