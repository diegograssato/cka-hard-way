- name: Copy etcd binaries 
  copy:
    src: '{{ BIN_DIR }}/etcd'
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755

- name: Copy etcdctl binaries 
  copy:
    src: '{{ BIN_DIR }}/etcdctl'
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755

- name: Create config directory
  file:
    path: /etc/etcd
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create etcd user
  user: 
    name: etcd
    shell: /usr/sbin/nologin
    comment: "etcd user"
    createhome: no
    system: yes
    state: present

- name: Create /var/lib/etcd directory
  file:
    path: /var/lib/etcd
    state: directory
    owner: etcd
    group: etcd
    mode: 0755

- name: Copy certificates and keys    
  copy:
    src: "{{ item }}"
    dest: /etc/etcd
    owner: root
    group: root
    mode: 0644
  loop:
    - '{{ PKI_DIR }}/ca.crt'
    - '{{ PKI_DIR }}/etcd-server.key'
    - '{{ PKI_DIR }}/etcd-server.crt'


- name: Copy systemd unit file
  template:
    src: "lib/systemd/system/etcd.service.j2"
    dest: "/lib/systemd/system/etcd.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart etcd

- name: Check etcd endpoint health
  shell: ETCDCTL_API=3 etcdctl --cert=/etc/etcd/etcd-server.crt --key=/etc/etcd/etcd-server.key --cacert=/etc/etcd/ca.crt --endpoints='{% for item in groups['masters'] %}https://{{ hostvars[item].ansible_host }}:2379{{ "," if not loop.last else ""}}{% endfor %}' endpoint health
  register: endpointHealth
  tags:
    - etc-status

- name: Check etcd member list
  shell: ETCDCTL_API=3 etcdctl --cert=/etc/etcd/etcd-server.crt --key=/etc/etcd/etcd-server.key --cacert=/etc/etcd/ca.crt --endpoints='{% for item in groups['masters'] %}https://{{ hostvars[item].ansible_host }}:2379{{ "," if not loop.last else ""}}{% endfor %}' member list
  register: memberList
  tags:
    - etc-status

- name: Check etcd cluster-health
  shell: etcdctl --cert-file=/etc/etcd/etcd-server.crt  --key-file=/etc/etcd/etcd-server.key --ca-file=/etc/etcd/ca.crt --peers='{% for item in groups['masters'] %}https://{{ hostvars[item].ansible_host }}:2379{{ "," if not loop.last else ""}}{% endfor %}' cluster-health
  register: clusterhealth
  tags:
    - etc-status

- name: Check etcd cluster endpoint health
  tags:
    - etc-status
  debug:
    msg: "{{ endpointHealth['stderr_lines'] }}"

- name: Check etcd cluster member list
  tags:
    - etc-status
  debug:
    msg: "{{ memberList['stdout_lines'] }}"

- name: Check etcd cluster-health
  tags:
    - etc-status
  debug:
    msg: "{{ clusterhealth['stdout_lines'] }}"