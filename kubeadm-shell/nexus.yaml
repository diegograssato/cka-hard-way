---
apiVersion: v1
kind: Namespace
metadata:
  name: nexus

---
 
# pv
 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: repo-nexus-pv
  labels:
    type: nexus-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 10.1.2.50
    path: /export/repo-nexus

 
---
# pvc
 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: repo-nexus-pvc
  namespace: nexus
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Gi
  selector: 
    matchLabels:
      type: nexus-pv


---
# deployment
 
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: repo-nexus
  name: repo-nexus
  namespace: nexus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: repo-nexus
  template:
    metadata:
      labels:
        app: repo-nexus
    spec:
      securityContext:
        fsGroup: 200
      containers:
        - name: repo-nexus
          image: quay.io/travelaudience/docker-nexus:3.15.2"
          imagePullPolicy: Always
          resources:
            limits:
              memory: "4Gi"
              cpu: "1000m"
            requests:
              memory: "2Gi"
              cpu: "500m"
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 5000
            protocol: TCP
          volumeMounts:
          - name: repo-nexus-data
            mountPath: /nexus-data
      initContainers:
        - name: install
          image: busybox
          command: ["sh", "-c", "chown -R 200:200 /nexus-data"]
          volumeMounts:
            - name: repo-nexus-data
              mountPath: /nexus-data            
      volumes:
        - name: repo-nexus-data
          persistentVolumeClaim:
            claimName: repo-nexus-pvc

 
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: repo-nexus
  name: repo-nexus
  namespace: nexus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: repo-nexus
  template:
    metadata:
      labels:
        app: repo-nexus
    spec:
      securityContext:
        fsGroup: 200
      initContainers:
        - name: volume-mount
          image: busybox
          command: ["sh", "-c", "chown -R 200:200 /nexus-data"]
          volumeMounts:
          - name: repo-nexus-data
            mountPath: /nexus-data          
      containers:
        - image: sonatype/nexus3
          imagePullPolicy: IfNotPresent
          name: repo-nexus
          env:
            - name: INSTALL4J_ADD_VM_PARAMS
              value: "-Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=1G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
          ports:
            - containerPort: 8081
              protocol: TCP
            - containerPort: 5000
              protocol: TCP          
          volumeMounts:
            - name: repo-nexus-data
              mountPath: /nexus-data
      volumes:
        - name: repo-nexus-data
          persistentVolumeClaim:
            claimName: repo-nexus-pvc               
---
# service
 
kind: Service
apiVersion: v1
metadata:
  labels:
    app: repo-nexus
  name: repo-nexus
  namespace: nexus
spec:
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: http
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: docker
  selector:
    app: repo-nexus
 
---
# ingress
 
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: repo-nexus
  namespace: nexus
  annotations:
      kubernetes.io/ingress.class: "nginx"  
spec:
  rules:
  # CHANGE ME
  - host: nexus.dtux.org
    http:
      paths:
      - path: /
        backend:
          serviceName: repo-nexus
          servicePort: 8081
  # CHANGE ME
  - host: docker.dtux.org
    http:
      paths:
      - path: /
        backend:
          serviceName: repo-nexus
          servicePort: 5000

mkdir -p /export/nexus  
chown -R 200 /export/nexus   